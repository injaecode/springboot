
package com.mysite.sbb.Question;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.mysite.sbb.DataNotFoundException;

import lombok.RequiredArgsConstructor;


@RequiredArgsConstructor
@Service
public class QuestionService {
	//JPA메소드를 사용하기 위해 (생성자를 이용한 객체 자동 주입)
	private final QuestionRepository questionRepository;

//02.14 수정 (아래 페이징 처리 반영 메소드로 변경)	
//	//메소드: question 테이블의 List 정보를 가져오는 메소드
//	public List<Question> getList() {
//		 return this.questionRepository.findAll();
//		 }
	
	//controller에서 getList메소드 호출 시 출력할 페이지 번호를 매개변수로 받음
	public Page<Question> getList(int page){
		//pageable객체에 2건을 담아 매개변수로 던짐
		Pageable pageable =PageRequest.of(page, 10); //페이지 당 출력할 레코드 수 10
		return this.questionRepository.findAll(pageable);
	}
	
	//상세 페이지를 처리하는 메소드 : id를 받아서 question테이블을 select (findById(1))
		//select한 레코드를 Question객체에 담아서 리턴
	public Question getQuestion(Integer id) {
		
		//select * from question where id=?
		Optional<Question> op = this.questionRepository.findById(id);
		if(op.isPresent()) {
			return op.get();
		}else {
			//사용자 정의 예외 - throw : 예외를 강제로 발생
						//- throws : 예외를 요청한 곳에서 처리하도록 미루는 것
			throw new DataNotFoundException("요청한 파일을 찾지 못했습니다");
		}
	}
	
	public void create (String subject, String content) {
		//Question 객체를 생성 후 setter주입
		Question q = new Question();
		q.setSubject(subject);
		q.setContent(content);
		q.setCreateDate(LocalDateTime.now());
		//repository의 save()메소드에 question객체 저장
		this.questionRepository.save(q); //db에 insert
	}
}